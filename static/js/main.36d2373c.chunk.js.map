{"version":3,"sources":["components/Section/Section.module.scss","components/Filter/Filter.module.scss","components/Header/Header.module.scss","components/ContactList/ContactList.module.css","components/Header/Header.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","Header","title","children","className","s","AppHeader","Section","Title","FormSection","Form","state","name","number","handleChange","e","currentTarget","value","console","log","props","setState","handleSubmit","preventDefault","onSubmit","reset","this","setNewValue","setContact","nameInputId","shortid","generate","numberInputId","Group","type","pattern","required","id","onChange","htmlFor","Btn","Component","ContactList","contacts","onDeleteContact","contactList","map","contactListItem","text","btn","onClick","Filter","FilterLabel","FilterInput","App","filter","addContact","contact","some","item","alert","deleteContact","prevState","changeFilter","componentDidUpdate","prevProps","localStorage","setItem","JSON","stringify","normalizedFilter","toLowerCase","includes","getItem","parseContacts","parse","changeFilterValue","visibleContact","getFilterContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36d2373c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__CqcNT\",\"Title\":\"Section_Title__3JdV3\",\"FormSection\":\"Section_FormSection__26CAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterInput\":\"Filter_FilterInput__3kH4y\",\"FilterLabel\":\"Filter_FilterLabel__31TZv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppHeader\":\"Header_AppHeader__1safz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"contactListItem\":\"ContactList_contactListItem__1l6Fa\",\"text\":\"ContactList_text__2dM24\"};","import PropTypes from 'prop-types';\nimport s from 'components/Header/Header.module.scss';\nfunction Header({ title, children }) {\n  return (\n    <header className={s.AppHeader}>\n      <div className=\"Container\">\n        <h1>{title}</h1>\n        {children}\n      </div>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport s from 'components/Section/Section.module.scss';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={`Container ${s.Section}`}>\n      <h2 className={s.Title}>{title}</h2>\n      <div className={s.FormSection}>{children}</div>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { Component } from 'react';\nimport shortid from 'shortid';\nimport s from 'components/ContactForm/ContactForm.module.scss';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    console.log(this.props);\n    // console.log(this.state);\n    // console.log(name, value);\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n    const { name, number } = this.state;\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const setNewValue = this.handleChange;\n    const setContact = this.handleSubmit;\n    const nameInputId = shortid.generate();\n    const numberInputId = shortid.generate();\n\n    return (\n      <form className={s.Form} onSubmit={setContact}>\n        <div className={s.Group}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            id={nameInputId}\n            onChange={setNewValue}\n          />\n          <label htmlFor={nameInputId}>Name</label>\n          <div className=\"bar\"></div>\n        </div>\n\n        <div className={s.Group}>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            id={numberInputId}\n            onChange={setNewValue}\n          />\n          <label htmlFor={numberInputId}>Number</label>\n          <div className=\"bar\"></div>\n        </div>\n        <button className={s.Btn} type=\"submit\">\n          add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <li className={s.contactListItem} id={id} key={id}>\n            <p className={s.text}>{name}</p>\n            <p className={s.text}>{number}</p>\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport s from 'components/Filter/Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.FilterLabel} htmlFor=\"\">\n      Filter contacts by name\n      <input\n        className={s.FilterInput}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import 'styles/shared.scss';\nimport shortid from 'shortid';\nimport { Component } from 'react';\nimport Header from 'components/Header';\nimport Section from 'components/Section';\nimport Form from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    // setTimeout(() => {\n    // console.log(name, number);\n    // }, 1000);\n    // console.log(this.state.contacts);\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const existContact = this.state.contacts.some(item => item.name === name);\n    // console.log(existContact);\n\n    !existContact\n      ? this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }))\n      : alert(`${name} is already in the contact`);\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  getFilterContacts() {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  }\n\n  componentDidMount() {\n    // console.log('app component did Mount');\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n\n    // console.log(parseContacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n  componentDidUpdate = (prevProps, prevState) => {\n    // console.log('app component did Update');\n    // console.log(prevState, this.state);\n\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  };\n\n  render() {\n    const addContact = this.addContact;\n    const deleteContact = this.deleteContact;\n    const { filter } = this.state;\n    const changeFilterValue = this.changeFilter;\n    const visibleContact = this.getFilterContacts();\n    console.log('Render');\n\n    return (\n      <div className=\"App\">\n        <Header title={'PhoneBook'}>\n          <Filter value={filter} onChange={changeFilterValue} />\n        </Header>\n        <Section title={'Contacts'}>\n          <Form onSubmit={addContact} />\n          <ContactList contacts={visibleContact} onDeleteContact={deleteContact} />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__pmdyI\",\"Btn\":\"ContactForm_Btn__3RNXk\",\"Group\":\"ContactForm_Group__2kBuf\"};"],"sourceRoot":""}